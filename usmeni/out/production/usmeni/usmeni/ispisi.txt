-------- ispisi --------
[OL1OL2]
	[P1]
static A
static B
non - static B
Constructor B
non - static B
Constructor B
non - static A
Constructor A
non - static B
Constructor B
	
	[P2]
-1
0
0 // x
0 // y
2 // x = 2
3

	[P7]
// i = 1
// n = (i = 2) % 5 = 2
2 // nema newl
// n = 2 % 4 = 2, i = 1
2 // nema newl
// n = 1 % 2 = 1, i = 2
2 // nema newl

[primjeri]
	[Klasa0]
// staticki inic nista, x je lokalno tu
// x = 0, y = 0
// x = -1
-1 0
// y = ++(-1) = 0, x = 0
0 0
// 1 + 1 = 2, x = 2
2
3
--> pravi ispis:
-1 0
0 0
2
3

	[Klasa1]
// nema (prazan main)

	[Klasa1/2/4/5] - comp.err.

	[Klasa7]
CE1 - 1
catch 2
CE1 - 1
CE2 - 2
catch 1
finally
CE3 - 1
main:RuntimeError (CE3 bacen)
	
	[Klasa21]
// nista

[primjeri2]
	[A1]	
a1-n
a1
a1-n
a1
a2(a1)
a2
a1-n
a1
a1-n
a1
a2(a1)
a2
a1-n
a1
a1-n
a1
a2(a1)
metoda2 a2
a3
metoda a1
metoda a3
metoda2 a2

	[C1]
ce1 - 2
ce2 - 2
c2 - ce2
0
exception
finally
ce1 - 2
c2 - ce2
0

	[Klasa20]
// threadovi, nzm jel ispis il crtanje al eo ispis
Klasa20()
first

// [0]
// id: 1
Thread2()
Thread3()

// [1]
// id: 10, c++ -> c = 12
Thread2()

// [2]
// id: 3
Thread2()
Thread3()

thread id 1 se pokrece (odbrojava 1 -:- 6)
thread id 10 se pokrece (odbrojava 1 -:- 6, ceka se na njega)
thread id 3 se pokrece (odbrojava 1 -:- 6, ceka se na njega -> nije demonska nit)
last // prije ili poslije, zavisi od schedulera


[test1]
	[z1]
		[a]
A1-S
// nema main u A1 klasi (A1.java)


		[b]
b1() // new b1()
b1() // B2.b1
b1()
b2()
b1()
b2()
// b3() // str = 'b3', BI1 nema pristup
b1()
b2()
j // b1.print(b1.j)
ava
b2 closed...
b3a
b2 closed...
b1()
b2()
// b5 = b3(), str = "a"
// Zadnja linija?a
a?ajinil ajndaZ
Resource closed...

		[d]
// d1 i d2 pokazuju na D1.instance
true
true
0
HELLO ? HELLO

		[e]
MainThread
start...
// E2 niz[0]: param_id = 1, this.id = 0, daemon false
// E2 niz[1]: param_id = 2, this.id = 2, daemon true
// E3 niz[2]: super(3): this.id = 3, daemon true
// E2 niz[3]: param_id = 4, this.id = 4, daemon true
// E3 niz[4]: super(5): this.id = 5, daemon true
New thread...
E2 - 0: false
E2 - 0: 1
E2 - 0: 2
E2 - 0: 3
E2 - 0: 4
E2 - 0: 5
// pokrece se niz[0].start(), niz[1:4].start()
End...
// ostatak ispisa niti
// izlaz iz main

		[f]
// f1 -> t2 Integer
// f2 -> T Double
// f3 -> s = "a"
// f4 -> x = 0 + (F2.getModified(1) == "b") = "b"
intValue('b') // koliko je nzm
NullPointerException // f1.t2 == null

		[g]
G2()
G3() // g1.i = 0xaaa
g2(g3) // g2.g3 = g1
g2.writeExternal
g3.writeExternal
data saved
g2()
g3()
g2.readExternal
g2()
g3()
g3.readExternal
data loaded
0xaaa // konvertuje se u decimalni

	[z2]
M1: 10 //m10.id = 10
M1: 0
M2: 21	// m20.id2 = 21
M1: 11 // m11.m1 = m10, m11.m2 = m21



	[Z3]
		[C]
false

		[D]
// c++ == 0 // false, c: 0 -> 1
// main("arg1", "arg2", "arg3"), c = 1
// main('A')
// x = 'a'
a
// c = 2
// kraj

		[E]
1
2
3
4
5
6
7
1.PON
2.UTO
3.SRE
4.CET
5.PET
6.SUB
7.NED

		[F]
// [1][2][3]
// niz.length == 1
// niz[1].length -> array index out of bounds
1
>>> ArrayIndexOutOfBounds

	[test2]
		[b]
// b2(-2): id = 0, B2.count = 1
B2(id = 0): created
// b2(-1): id = 0, B2.count = 2
B2(id = 0): created
// b2(0): id = 0, B2.count = 3
B2(id = 0): created
// b2(1): id = 1, B2.count = 4
B2(id = 1): created
// b2(2): id = 2, B2.count = 5
B2(id = 2): created
// rev(1.B2(id = 0)) = 1.B2(id = 0)
1.B2(id = 0)
// concat u BI1 zamijeni mjesta pa sabere
BI3BI3
2.B2(id = 0)
BI3BI1
3.B2(id = 0)
BI3BI1
4.B2(id = 1)
BI3BI1
5.B2(id = 2)
BI3BI1

		[c]
c1()
c2()
c3()
c2: metoda()
c3: metoda()
CE1: CE2
CE2: CE2
finally
main 2: CE2

		[e]
// c = 1
// e1 -> c++ -> 2 -> daemon
// e1 -> c++ -> 3 -> not daemon
// thread
// e1 -> c++ -> 4 -> daemon
// thread

First line
Checking...
Starting background thread...
Checking
arg1
Checking...
Checking...
Starting background thread...
Checking...
Last line
--> kako se pokrece treca nit ??

		[f]
T1, T1, T1
Running
Running
Running
End

		[g]
G2 konstruktor
G3 konstruktor
G2 writeExternal
G3 writeObject
G2 konstruktor
G2 readExternal
1
2
G3 konstruktor
G3 readObject
5
6

	[z3]
		[a]
// shortcircuiting
// k = 0, i = 0; j = 10
// k = k + i + j
// 0 < 5 -> k = 11
// 1 < 5 -> k = 11 + 2 + 10 = 23
// 2 < 5 -> k = 23 + 3 + 10 = 36
// 3 < 5 -> k = 38 + 4 + 10 = 50
// 4 < 5 -> k = 52 + 5 + 10 = 65, +15 stalno
// 5 < 5, 9 > 3 -> k = 80
// 6 < 5, 8 > 3 -> k = 95
// 7 < 5, 7 > 3 -> k = 110
// 8 < 5, 6 > 3 -> k = 125
// 9 < 5, 5 > 3 -> k = 140
// 10 < 5, 4 > 3 -> k = 155
// kraj
// k = 155
155

		[c]
true
false
true ==> str == "word"
false

		[d]
2
3
5
7
11

		[f]
// ne vraca niz[0] jer: int je 0 default, a prvo uvecava pa vraca taj uvecani idx (1)
2
3
5
6
7
8
main: NoSuchElementException: Kraj niza

[u2k]
	[a1]
A3()
A2()
A3()
A2()
StackOverflowError (out of memory)

